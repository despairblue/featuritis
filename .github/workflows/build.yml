name: Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      # If we have many bug we can test on all plateform
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        # os: [ubuntu-latest, macos-latest]
        # os: [ubuntu-latest]
        os: [windows-2016]
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/checkout@v1
      # - name: Install esy
      #   run: npm install -g esy
      # - name: Install revery-packager
      #   run: npm install -g revery-packager

      - name: Install native dependencies on ubuntu-latest
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev mesa-utils mesa-utils-extra ragel libgtk-3-dev nasm tree libjpeg62 libsdl2-2.0.0

      - name: Install native dependencies on macos-latest
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install cmake libtool libpng ragel tree || true
          brew upgrade cmake libtool libpng ragel tree || true

      # - name: Install native dependencies on windows-latest
      #   if: matrix.os == 'windows-latest'
      #   run: npm install -g windows-build-tools

      # - name: Install
      #   run: esy install

      - name: Print esy cache
        id: print_esy_cache
        run: node .github/workflows/print_esy_cache.js

      # - name: Try to restore dependencies cache
      #   if: matrix.os != 'windows-2016'
      #   uses: actions/cache@v1
      #   with:
      #     path: ${{ steps.print_esy_cache.outputs.esy_cache }}
      #     key: ${{ matrix.os }}-${{ hashFiles('**/index.json') }}

      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ matrix.os }}-${{ hashFiles('**/index.json') }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-1" # optional: defaults to us-east-1
          SOURCE_DIR: bin

      - name: Test
        run: |
          ls bin
          echo "hey" > bin\foo
          ls bin

      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ matrix.os }}-${{ hashFiles('**/index.json') }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-1" # optional: defaults to us-east-1
          SOURCE_DIR: ${{ steps.print_esy_cache.outputs.esy_cache }}

      - name: Test 2
        run: |
          ls bin
          echo "hey" > bin\foo
          ls bin
      # - uses: jakejarvis/s3-sync-action@master
      #   with:
      #     args: --acl public-read --follow-symlinks --delete
      #   env:
      #     AWS_S3_BUCKET: ${{ matrix.os }}-${{ hashFiles('**/index.json') }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: "us-west-1" # optional: defaults to us-east-1
      #     SOURCE_DIR: ${{ steps.print_esy_cache.outputs.esy_cache }}
      # - name: Try to restore dependencies cache on windows
      #   if: matrix.os == 'windows-2016'
      #   # See: https://github.com/actions/cache/issues/153
      #   uses: actions/upload-artifact@v1
      #   with:
      #     path: ${{ steps.print_esy_cache.outputs.esy_cache }}
      #     key: ${{ matrix.os }}-${{ hashFiles('**/index.json') }}
      #
      # - name: Build
      #   run: esy build
      # - name: Test
      #   run: esy test
      #
      # - name: Build docs
      #   run: esy doc
      # For Debugging
      # - name: Debugging with tmate
      #   uses: mxschmitt/action-tmate@v2
      # - name: Build Binary
      #   run: |
      #     revery-packager || true
      #     tree _release/ || true
      # - name: Upload Binary
      #   uses: actions/upload-artifact@v1
      #   if: matrix.os == 'ubuntu-latest'
      #   with:
      #     name: linux-featuritis.AppImage
      #     path: _release/ReveryApp-x86_64.AppImage
      #
      # - name: Upload Binary
      #   uses: actions/upload-artifact@v1
      #   if: matrix.os == 'macos-latest'
      #   with:
      #     name: macosx-featuritis.dmg
      #     path: _release/ReveryApp.dmg
