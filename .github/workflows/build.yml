name: Pull Request

on: pull_request

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      # If we have many bug we can test on all plateform
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.12
      CACHE_VERSION: v5

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12

      - uses: actions/checkout@v1

      - name: Install esy, rimraf, revery-packager
        run: npm install -g esy@0.6.6 rimraf@3.0.2 revery-packager@1.1.0

      - name: Install native dependencies on ubuntu-latest
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev mesa-utils mesa-utils-extra ragel libgtk-3-dev nasm tree libjpeg62 libsdl2-2.0.0

      - name: Install native dependencies on macos-latest
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install cmake libtool libpng ragel tree pkg-config || true
          brew upgrade cmake libtool libpng ragel tree pkg-config || true

      - name: Restore Cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          path: |
            _export
            _tarballs
          # Don't use the same prefix for `key` to make sure that  we're not
          # creating one that would be matching the `restore-keys`.
          key: pr-${{ runner.os }}-esy-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-esy-${{ env.CACHE_VERSION }}
            ${{ runner.os }}-esy-

      - name: Debugging with tmate
        if: false
        uses: mxschmitt/action-tmate@v2

      - name: Install
        run: |
          ls _tarballs _export || true
          esy install --cache-tarballs-path=./_tarballs

      - name: Import Build-Cache
        run: |
          esy import-dependencies _export

      - name: Build
        run: esy build

      - name: Test
        run: esy test

      - name: Debugging with tmate
        if: false
        uses: mxschmitt/action-tmate@v2

      - name: Build Binary on ubuntu-latest
        if: matrix.os == 'ubuntu-latest'
        run: |
          revery-packager

      - name: Build Binary on macos-latest
        if: matrix.os == 'macos-latest'
        run: |
          env MACOSX_DEPLOYMENT_TARGET="10.12" revery-packager

      - name: Upload Binary on ubuntu-latest
        uses: actions/upload-artifact@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          name: linux-featuritis.AppImage
          path: _release/ReveryApp-x86_64.AppImage

      - name: Upload Binary on macos-latest
        uses: actions/upload-artifact@v1
        if: matrix.os == 'macos-latest'
        with:
          name: macosx-featuritis.dmg
          path: _release/ReveryApp.dmg

      # Delete build cache so it cannot be saved. Every OS only has one
      # cache that is created every Monday by the prime-cache workflow.
      # Otherwise the caches would start evicting each other since they add
      # up to roughly 4 GB for all OSes together.
      - name: Delete Cache
        if: always()
        run: |
          rimraf _export _tarballs
          ls _tarballs _export || true
